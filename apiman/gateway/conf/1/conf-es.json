{ 
  "variables": {
    "apiman": {
      "es": {
        "protocol": "http",
        "host": "elastic",
        "port": 9200,
        "username": null,
        "password": null,
        "timeout": 10000
      }
    }
  },
  "registry": {
    "class": "io.apiman.gateway.engine.es.PollCachingESRegistry",
    "config": {
      "client": {
        "type": "jest",
        "protocol": "${apiman.es.protocol}",
        "host": "${apiman.es.host}",
        "port": "${apiman.es.port}",
        "initialize": true,
        "username": "${apiman.es.username}",
        "password": "${apiman.es.password}",
        "timeout": "${apiman.es.timeout}",
        "cache-polling-interval": 15
      }
    }
  },
  "writers": {
    "error": {
      "class": "io.apiman.gateway.engine.impl.TracePolicyErrorWriter",
      "config": {}
    }
  },
  "encrypter": {
    "class": "io.apiman.gateway.engine.impl.DefaultDataEncrypter",
    "config": {}
  },
  "plugin-registry": {
    "class": "io.apiman.gateway.platforms.vertx3.engine.VertxPluginRegistry",
    "config": {
    }
  },
  "connector-factory": {
    "class": "io.apiman.gateway.platforms.vertx3.connector.ConnectorFactory",
    "config": {
      "tls": {
        // Enable devMode for HTTPS connections (gateway trusts any certificate).
        // This should *NOT* be used in production mode. *Use with great care.*
        "devMode": true,

        "allowSelfSigned": true,

        "allowAnyHost": true

        // Trust store contains certificate(s) trusted by gateway.
        // "trustStore": "/path/to/your/truststore.jks",
        // "trustStorePassword": "abc123",

        // Key store contains gateway's keys (including private components: keep it safe).
        // "keyStore": "/path/to/your/keystore.jks",
        // "keyStorePassword": "abc123",

        // By default all keys can be used (will try all). If alias list provided, will only attempt to use listed keys.
        // "keyAliases": "mykey,myotherkey",

        // Allowed TLS/SSL protocols and ciphers suites as CSV. Availability will vary depending on your JVM impl.
        // Uses JVM defaults depending if not explicitly provided.
        // See: https://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html
        // You may wish to consider global JVM settings by modifying java.security
        // "allowedProtocols": "TLSv1.2,TLSv1.1",
        // "allowedCiphers": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,...",
        // "disallowedCiphers": "..."
      }
    }
  },

  "policy-factory": {
    "class": "io.apiman.gateway.engine.policy.PolicyFactoryImpl",
    "config": {}
  },

  "logger-factory": {
    "class": "io.apiman.gateway.platforms.vertx3.logging.VertxLoggerDelegate",
    "config": {}
  },

  "metrics": {
    "class": "io.apiman.gateway.engine.es.ESMetrics",
    "config": {
      "client": {
        "type": "jest",
        "protocol": "${apiman.es.protocol}",
        "host": "${apiman.es.host}",
        "port": "${apiman.es.port}",
        "initialize": true,
        "username": "${apiman.es.username}",
        "password": "${apiman.es.password}",
        "timeout": "${apiman.es.timeout}"
      }
    }
  },

  "components": {
    "ISharedStateComponent": {
      "class": "io.apiman.gateway.engine.es.ESSharedStateComponent",
      "config": {
        "client": {
          "type": "jest",
          "protocol": "${apiman.es.protocol}",
          "host": "${apiman.es.host}",
          "port": "${apiman.es.port}",
          "initialize": true,
          "username": "${apiman.es.username}",
          "password": "${apiman.es.password}",
          "timeout": "${apiman.es.timeout}"
        }
      }
    },

    "IRateLimiterComponent": {
      "class": "io.apiman.gateway.engine.es.ESRateLimiterComponent",
      "config": {
        "client": {
          "type": "jest",
          "protocol": "${apiman.es.protocol}",
          "host": "${apiman.es.host}",
          "port": "${apiman.es.port}",
          "initialize": true,
          "username": "${apiman.es.username}",
          "password": "${apiman.es.password}",
          "timeout": "${apiman.es.timeout}"
        }
      }
    },

    "ICacheStoreComponent": {
      "class": "io.apiman.gateway.engine.es.ESCacheStoreComponent",
      "config": {
        "client": {
          "type": "jest",
          "protocol": "${apiman.es.protocol}",
          "host": "${apiman.es.host}",
          "port": "${apiman.es.port}",
          "initialize": true,
          "username": "${apiman.es.username}",
          "password": "${apiman.es.password}",
          "timeout": "${apiman.es.timeout}"
        }
      }
    },

    "IExecuteBlockingComponent": {
      "class": "io.apiman.gateway.platforms.vertx3.components.ExecuteBlockingComponentImpl",
      "config": {}
    },
    "IJdbcComponent": {
      "class": "io.apiman.gateway.platforms.vertx3.components.JdbcClientComponentImpl",
      "config": {}
    },

    "ILdapComponent": {
      "class": "io.apiman.gateway.platforms.vertx3.components.LdapClientComponentImpl",
      "config": {}
    },

    "IHttpClientComponent": {
      "class": "io.apiman.gateway.platforms.vertx3.components.HttpClientComponentImpl",
      "config": {}
    },

    "IPolicyFailureFactoryComponent": {
      "class": "io.apiman.gateway.platforms.vertx3.components.PolicyFailureFactoryComponent",
      "config": {}
    },

    "IBufferFactoryComponent": {
      "class": "io.apiman.gateway.platforms.vertx3.components.BufferFactoryComponentImpl",
      "config": {}
    },

    "IPeriodicComponent": {
        "class": "io.apiman.gateway.platforms.vertx3.components.PeriodicComponentImpl",
        "config": {}
    }
  },  
  "hostname": "apiman-gateway1",
  //"publicEndpoint": "https://gaia:8444",

  // Verticle configuration
  // Port - The port a given verticle listens on (where relevant)
  // Count - Number of given verticle type launched, or "auto" for automatic.
  "verticles": {
    "http": {
      "port": 8082,
      "count": "auto"
    },
    // Configure the following SSL section to enable SSL/TLS.
    "https": {
      "port": 8444,
      "count": 0
    },
    // The Gateway API; this will be the port to set in the UI.
    // e.g. http://localhost:8081 or https://gateway.machine:8081
    // Configure the following SSL section to enable SSL/TLS.
    "api": {
      "port": 8081,
      "count": 1
    }
  },

  "auth": {
    "type": "keycloak",
    "config": {
      "flowType": "PASSWORD",
      "requiredRole": "realm:apipublisher",
      "realm": "apiman",
      "realm-public-key": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCrVrCuTtArbgaZzL1hvh0xtL5mc7o0NqPVnYXkLvgcwiC3BjLGw1tGEGoJaXDuSaRllobm53JBhjx33UNv+5z/UMG4kytBWxheNVKnL6GgqlNabMaFfPLPCF8kAgKnsi79NMo+n6KnSY8YeUmec/p2vjO2NjsSAVcWEQMVhJ31LwIDAQAB",
      "auth-server-url": "https://keycloak:8443/auth",
      "ssl-required": "none",
      "public-client": true,
      "disable-trust-manager": true,
      "allow-any-hostname" : true,
      "resource": "apiman-gateway-api",
      // A limitation in the current OAuth2 implementation means a credentials section is required
      // even if your client is not set to "confidential". Leave this dummy section if you're using non-confidential.
      "credentials": {
        "secret": "b918230d-db5c-4c79-aab0-738a4c026d93"
      },
      "truststore": "/usr/src/apiman/apiman-distro-vertx/apiman.jks",
      "truststore-password": "secret"
      // "client-keystore": "/usr/src/apiman/apiman-distro-vertx/apiman.jks",
      // "client-keystore-password": "secret"
      // End paste here
    }
  },

  // When reporting an API's endpoint, prefer secure (i.e. https). You should probably change this after enabling HTTPS.
  "preferSecure": false
}
